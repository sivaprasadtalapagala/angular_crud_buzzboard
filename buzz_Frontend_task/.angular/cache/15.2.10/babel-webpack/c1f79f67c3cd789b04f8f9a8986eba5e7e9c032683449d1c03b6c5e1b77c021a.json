{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction UserFormComponent_tr_67_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function UserFormComponent_tr_67_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectUser(user_r1));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function UserFormComponent_tr_67_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteUser(user_r1.id));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n  }\n}\nexport class UserFormComponent {\n  constructor(fb, userService, http) {\n    this.fb = fb;\n    this.userService = userService;\n    this.http = http;\n    this.users = [];\n    this.selectedUser = null;\n  }\n  ngOnInit() {\n    this.loadUsers();\n    this.initForm();\n  }\n  initForm() {\n    this.userForm = this.fb.group({\n      firstName: [''],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.email]],\n      phone: [''],\n      company: [''],\n      gender: [''],\n      dob: [''],\n      password: [''],\n      confirmPassword: ['']\n    });\n    // this.userForm = this.fb.group({\n    //   firstName: ['', [Validators.required]],\n    //   lastName: ['', [Validators.required]],\n    //   email: ['', [Validators.required, Validators.email]],\n    //   phone: ['',[Validators.required]],\n    //   company: ['',[Validators.required]],\n    //   gender: ['',[Validators.required]],\n    //   dob: ['',[Validators.required]],\n    //   password: ['', [Validators.required]],\n    //   confirmPassword: ['', [Validators.required]],\n    // });\n  }\n\n  addUser() {\n    const user = this.userForm.value;\n    this.userService.addUser(user).subscribe(response => {\n      console.log('User added successfully:', response);\n      // Optionally, you can reset the form here\n      this.userForm.reset();\n    }, error => {\n      console.error('Error adding user:', error);\n    });\n  }\n  // loadUsers(): void {\n  //   this.userService.getAllUsers().subscribe((users) => {\n  //     this.users = users;\n  //     console.log(\"===\",this.users)\n  //   });\n  // }\n  loadUsers() {\n    this.http.get(`http://localhost:3000/users`);\n    //  => {\n    //   this.users = users;\n    //   console.log(\"===\",this.users)\n    // });\n  }\n  // addUser(user: User): void {\n  //   this.userService.addUser(user).subscribe(() => {\n  //     this.loadUsers();\n  //   });\n  // }\n  editUser(user) {\n    if (user.id) {\n      this.userService.editUser(user.id, user).subscribe(() => {\n        this.loadUsers();\n      });\n    }\n  }\n  deleteUser(id) {\n    this.userService.deleteUser(id).subscribe(() => {\n      this.loadUsers();\n    });\n  }\n  selectUser(user) {\n    this.selectedUser = {\n      ...user\n    };\n  }\n  clearSelection() {\n    this.selectedUser = null;\n  }\n  static #_ = this.ɵfac = function UserFormComponent_Factory(t) {\n    return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserFormComponent,\n    selectors: [[\"app-user-form\"]],\n    decls: 68,\n    vars: 2,\n    consts: [[1, \"p-2\"], [1, \"text-center\"], [1, \"container\", \"mt-4\", 3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"form-label\"], [\"type\", \"tel\", \"id\", \"phone\", \"formControlName\", \"phone\", 1, \"form-control\"], [\"for\", \"company\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"company\", \"formControlName\", \"company\", 1, \"form-control\"], [1, \"form-label\"], [1, \"form-check\"], [\"type\", \"radio\", \"id\", \"male\", \"value\", \"Male\", \"formControlName\", \"gender\", 1, \"form-check-input\"], [\"for\", \"male\", 1, \"form-check-label\"], [\"type\", \"radio\", \"id\", \"female\", \"value\", \"Female\", \"formControlName\", \"gender\", 1, \"form-check-input\"], [\"for\", \"female\", 1, \"form-check-label\"], [\"for\", \"dob\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"dob\", \"formControlName\", \"dob\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ms-2\", 3, \"click\"], [1, \"table\", \"mt-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function UserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"User Registration Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Phone:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Company:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Gender:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 15);\n        i0.ɵɵelement(28, \"input\", 16);\n        i0.ɵɵelementStart(29, \"label\", 17);\n        i0.ɵɵtext(30, \"Male\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 15);\n        i0.ɵɵelement(32, \"input\", 18);\n        i0.ɵɵelementStart(33, \"label\", 19);\n        i0.ɵɵtext(34, \"Female\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 3)(36, \"label\", 20);\n        i0.ɵɵtext(37, \"DOB (dd/mm/yyyy):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 3)(40, \"label\", 22);\n        i0.ɵɵtext(41, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 3)(44, \"label\", 24);\n        i0.ɵɵtext(45, \"Confirm Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_47_listener() {\n          return ctx.addUser();\n        });\n        i0.ɵɵtext(48, \"Add User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_49_listener() {\n          return ctx.userForm.reset();\n        });\n        i0.ɵɵtext(50, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(51, \"hr\");\n        i0.ɵɵelementStart(52, \"div\")(53, \"table\", 28)(54, \"thead\")(55, \"tr\")(56, \"th\");\n        i0.ɵɵtext(57, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"th\");\n        i0.ɵɵtext(59, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"th\");\n        i0.ɵɵtext(61, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"th\");\n        i0.ɵɵtext(63, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"th\");\n        i0.ɵɵtext(65, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(66, \"tbody\");\n        i0.ɵɵtemplate(67, UserFormComponent_tr_67_Template, 14, 4, \"tr\", 29);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(64);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","UserFormComponent","constructor","fb","userService","http","ngOnInit","loadUsers","initForm","userForm","group","firstName","lastName","email","required","phone","company","gender","dob","password","confirmPassword","addUser","user","value","subscribe","response","console","log","reset","error","get","editUser","id","deleteUser","selectUser","selectedUser","clearSelection","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/sivaprasadreddytalapagala/demo_2/angular_crud_buzzboard/buzz_Frontend_task/src/app/user-form/user-form.component.ts","/home/sivaprasadreddytalapagala/demo_2/angular_crud_buzzboard/buzz_Frontend_task/src/app/user-form/user-form.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { User } from '../user.model';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent {\n  userForm: any;\n  users: User[] = [];\n  selectedUser: User | null = null;\n  constructor(private fb: FormBuilder, private userService: UserService,\n    private http:HttpClient) {}\n\n  ngOnInit(): void {\n    this.loadUsers();\n\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.userForm = this.fb.group({\n      firstName: ['', ],\n      lastName: ['', ],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['',],\n      company: ['',],\n      gender: ['',],\n      dob: ['',],\n      password: ['', ],\n      confirmPassword: ['', ],\n    });\n    // this.userForm = this.fb.group({\n    //   firstName: ['', [Validators.required]],\n    //   lastName: ['', [Validators.required]],\n    //   email: ['', [Validators.required, Validators.email]],\n    //   phone: ['',[Validators.required]],\n    //   company: ['',[Validators.required]],\n    //   gender: ['',[Validators.required]],\n    //   dob: ['',[Validators.required]],\n    //   password: ['', [Validators.required]],\n    //   confirmPassword: ['', [Validators.required]],\n    // });\n  }\n\n  addUser(): void {\n    const user = this.userForm.value;\n    this.userService.addUser(user).subscribe(\n      (response) => {\n        console.log('User added successfully:', response);\n        // Optionally, you can reset the form here\n        this.userForm.reset();\n      },\n      (error) => {\n        console.error('Error adding user:', error);\n      }\n    );\n  }\n\n  // loadUsers(): void {\n  //   this.userService.getAllUsers().subscribe((users) => {\n  //     this.users = users;\n  //     console.log(\"===\",this.users)\n  //   });\n  // }\n  loadUsers(): void {\n    this.http.get(`http://localhost:3000/users`)\n    //  => {\n    //   this.users = users;\n    //   console.log(\"===\",this.users)\n    // });\n  }\n\n  // addUser(user: User): void {\n  //   this.userService.addUser(user).subscribe(() => {\n  //     this.loadUsers();\n  //   });\n  // }\n\n  editUser(user: User): void {\n    if (user.id) {\n      this.userService.editUser(user.id, user).subscribe(() => {\n        this.loadUsers();\n      });\n    }\n  }\n\n  deleteUser(id: any): void {\n    this.userService.deleteUser(id).subscribe(() => {\n      this.loadUsers();\n    });\n  }\n  selectUser(user: User): void {\n    this.selectedUser = { ...user };\n  }\n\n  clearSelection(): void {\n    this.selectedUser = null;\n  }\n}\n","<!-- user-form.component.html -->\n<div class=\"p-2\">\n    <h2 class=\"text-center\">User Registration Form</h2>\n<form [formGroup]=\"userForm\" class=\"container mt-4\">\n    <div class=\"mb-3\">\n      <label for=\"firstName\" class=\"form-label\">First Name:</label>\n      <input type=\"text\" id=\"firstName\" class=\"form-control\" formControlName=\"firstName\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"lastName\" class=\"form-label\">Last Name:</label>\n      <input type=\"text\" id=\"lastName\" class=\"form-control\" formControlName=\"lastName\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email:</label>\n      <input type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"phone\" class=\"form-label\">Phone:</label>\n      <input type=\"tel\" id=\"phone\" class=\"form-control\" formControlName=\"phone\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"company\" class=\"form-label\">Company:</label>\n      <input type=\"text\" id=\"company\" class=\"form-control\" formControlName=\"company\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label class=\"form-label\">Gender:</label>\n      <div class=\"form-check\">\n        <input type=\"radio\" id=\"male\" class=\"form-check-input\" value=\"Male\" formControlName=\"gender\" />\n        <label for=\"male\" class=\"form-check-label\">Male</label>\n      </div>\n      <div class=\"form-check\">\n        <input type=\"radio\" id=\"female\" class=\"form-check-input\" value=\"Female\" formControlName=\"gender\" />\n        <label for=\"female\" class=\"form-check-label\">Female</label>\n      </div>\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"dob\" class=\"form-label\">DOB (dd/mm/yyyy):</label>\n      <input type=\"text\" id=\"dob\" class=\"form-control\" formControlName=\"dob\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password:</label>\n      <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" />\n    </div>\n  \n    <div class=\"mb-3\">\n      <label for=\"confirmPassword\" class=\"form-label\">Confirm Password:</label>\n      <input type=\"password\" id=\"confirmPassword\" class=\"form-control\" formControlName=\"confirmPassword\" />\n    </div>\n  \n    <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"addUser()\">Add User</button>\n    <button type=\"button\" class=\"btn btn-secondary ms-2\" (click)=\"userForm.reset()\">Cancel</button>\n  </form>\n\n\n\n  <hr>\n\n  <div>\n    <table class=\"table mt-4\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\">\n            <td>{{ user.id }}</td>\n            <td>{{ user.firstName }}</td>\n            <td>{{ user.lastName }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n              <button class=\"btn btn-primary\" (click)=\"selectUser(user)\">Edit</button>\n              <button class=\"btn btn-danger\" (click)=\"deleteUser(user.id)\">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n  </div>\n</div>\n\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}