{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nexport class UserFormComponent {\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.userForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      company: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      dob: ['', [Validators.required]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  addUser() {\n    const user = this.userForm.value;\n    this.userService.addUser(user).subscribe(response => {\n      console.log('User added successfully:', response);\n      // Optionally, you can reset the form here\n      this.userForm.reset();\n    }, error => {\n      console.error('Error adding user:', error);\n    });\n  }\n  static #_ = this.ɵfac = function UserFormComponent_Factory(t) {\n    return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserFormComponent,\n    selectors: [[\"app-user-form\"]],\n    decls: 2,\n    vars: 0,\n    template: function UserFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"user-form works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;AAQxD,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,OAAE,GAAFD,EAAE;IAAuB,gBAAW,GAAXC,WAAW;EAAgB;EAExEC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC5BC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAC,CAACb,UAAU,CAACU,QAAQ,CAAC,CAAC;MACjCI,OAAO,EAAE,CAAC,EAAE,EAAC,CAACd,UAAU,CAACU,QAAQ,CAAC,CAAC;MACnCK,MAAM,EAAE,CAAC,EAAE,EAAC,CAACf,UAAU,CAACU,QAAQ,CAAC,CAAC;MAClCM,GAAG,EAAE,CAAC,EAAE,EAAC,CAAChB,UAAU,CAACU,QAAQ,CAAC,CAAC;MAC/BO,QAAQ,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACU,QAAQ,CAAC;MACnCQ,eAAe,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACU,QAAQ;KAC1C,CAAC;EACJ;EAEAS,OAAO;IACL,MAAMC,IAAI,GAAG,IAAI,CAACb,QAAQ,CAACc,KAAK;IAChC,IAAI,CAACjB,WAAW,CAACe,OAAO,CAACC,IAAI,CAAC,CAACE,SAAS,CACrCC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjD;MACA,IAAI,CAAChB,QAAQ,CAACmB,KAAK,EAAE;IACvB,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CACF;EACH;EAAC;qBAnCU1B,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAA2B;IAAAC;IAAAC;IAAAC;MAAA;QCT9BC,yBAAG;QAAAA,gCAAgB;QAAAA,iBAAI","names":["Validators","UserFormComponent","constructor","fb","userService","ngOnInit","initForm","userForm","group","firstName","required","lastName","email","phone","company","gender","dob","password","confirmPassword","addUser","user","value","subscribe","response","console","log","reset","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/sivaprasadreddytalapagala/demo_2/angular_crud_buzzboard/buzz_Frontend_task/src/app/user-form/user-form.component.ts","/home/sivaprasadreddytalapagala/demo_2/angular_crud_buzzboard/buzz_Frontend_task/src/app/user-form/user-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent {\n  userForm: any;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.userForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['',[Validators.required]],\n      company: ['',[Validators.required]],\n      gender: ['',[Validators.required]],\n      dob: ['',[Validators.required]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  addUser(): void {\n    const user = this.userForm.value;\n    this.userService.addUser(user).subscribe(\n      (response) => {\n        console.log('User added successfully:', response);\n        // Optionally, you can reset the form here\n        this.userForm.reset();\n      },\n      (error) => {\n        console.error('Error adding user:', error);\n      }\n    );\n  }\n}\n","<p>user-form works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}